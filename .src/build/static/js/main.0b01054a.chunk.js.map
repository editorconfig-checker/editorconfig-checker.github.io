{"version":3,"sources":["logo.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","Link","url","text","href","target","rel","twitterSvg","viewBox","class","d","githubSvg","xingSvg","linkedinSvg","App","className","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,kC,wKCIrCC,G,MAAO,SAAC,GAAD,IAAEC,EAAF,EAAEA,IAAKC,EAAP,EAAOA,KAAP,OACX,uBAAGC,KAAMF,EAAKG,OAAO,SAASC,IAAI,uBAC/BH,KAICI,EACJ,yBAAKC,QAAQ,cAAcC,MAAM,iBAC/B,0BACEC,EAAE,y+BACFD,MAAM,mBAKNE,EACJ,yBAAKH,QAAQ,gBAAgBC,MAAM,iBACjC,0BACEC,EAAE,y6BACFD,MAAM,mBAKNG,EACJ,yBAAKJ,QAAQ,gBAAgBC,MAAM,iBACjC,0BACEC,EAAE,6PACFD,MAAM,mBAKNI,EACJ,yBAAKL,QAAQ,YAAYC,MAAM,iBAC7B,0BACEC,EAAE,4qBACFD,MAAM,mBAsNGK,MAjNf,WACE,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,uBACEX,KAAK,0CACLC,OAAO,SACPC,IAAI,YACJ,yBAAKS,UAAU,OAAOC,IAAKC,IAAMC,IAAI,WAGzC,0BAAMH,UAAU,QACd,oDACA,mDACA,2aAMyD,IACvD,kBAAC,EAAD,CACEb,IAAI,4BACJC,KAAK,8BAIT,wDACA,weAUA,gDAEA,qCACA,+BACE,kBAAC,EAAD,CACED,IAAI,wEACJC,KAAK,cAGT,8CACmB,IACjB,kBAAC,EAAD,CACED,IAAI,wEACJC,KAAK,iBAJT,0HAOoD,qCAAiB,IAPrE,cAWA,0CACA,+BACE,kBAAC,EAAD,CACED,IAAI,qDACJC,KAAK,QACJ,IAJL,IAME,kBAAC,EAAD,CACED,IAAI,0EACJC,KAAK,YAGT,6EACA,gEACoC,oCADpC,OACwD,IACtD,sDAFF,0BAE2D,IACzD,wDAHF,IAGuC,IACrC,0EAJF,kBAIuE,IACrE,8CALF,QAKgC,oCALhC,MAKmD,IACjD,sDANF,KASA,mCACA,+BACE,kBAAC,EAAD,CACED,IAAI,mEACJC,KAAK,cACJ,IAJL,IAME,kBAAC,EAAD,CACED,IAAI,mEACJC,KAAK,YAGT,6EACA,gEACoC,oCADpC,OACwD,IACtD,sDAFF,0BAE2D,IACzD,iDAHF,IAGgC,IAC9B,mEAJF,kBAIgE,IAC9D,+CALF,QAKiC,oCALjC,MAKoD,IAClD,sDANF,KASA,sCACA,sGAIA,0CACA,+BACE,kBAAC,EAAD,CACED,IAAI,+DACJC,KAAK,SAGT,uFAC4D,IAC1D,2DAEF,oEAEA,mDACA,gJAKA,6CACA,qLAGmB,uCAHnB,4DAI0B,gDAJ1B,kEAKoD,sCALpD,0DAQA,iXAmBA,uCAEA,8CACA,wOAGkE,IAChE,kBAAC,EAAD,CACED,IAAI,+DACJC,KAAK,6CANT,iOAcA,mCACA,oIAEoC,uDAFpC,uEAGqE,IACnE,kBAAC,EAAD,CACED,IAAI,8DACJC,KAAK,qBANT,MAWF,gCACE,4BACE,4BACE,kBAAC,EAAD,CAAMD,IAAI,+BAA+BC,KAAMI,KAEjD,4BACE,kBAAC,EAAD,CAAML,IAAI,gCAAgCC,KAAMQ,KAElD,4BACE,kBAAC,EAAD,CACET,IAAI,yDACJC,KAAMS,KAGV,4BACE,kBAAC,EAAD,CACEV,IAAI,2DACJC,KAAMU,SC1OAM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.0b01054a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2975e6f0.png\";","import React from 'react';\nimport logo from './logo.png';\nimport './App.css';\n\nconst Link = ({url, text}) => (\n  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n    {text}\n  </a>\n);\n\nconst twitterSvg = (\n  <svg viewBox=\"0 0 430 430\" class=\"jsx-924075221\">\n    <path\n      d=\"M381.384,198.639c24.157,-1.993 40.543,-12.975 46.849,-27.876c-8.714,5.353 -35.764,11.189 -50.703,5.631c-0.732,-3.51 -1.55,-6.844 -2.353,-9.854c-11.383,-41.798 -50.357,-75.472 -91.194,-71.404c3.304,-1.334 6.655,-2.576 9.996,-3.691c4.495,-1.61 30.868,-5.901 26.715,-15.21c-3.5,-8.188 -35.722,6.188 -41.789,8.067c8.009,-3.012 21.254,-8.193 22.673,-17.396c-12.27,1.683 -24.315,7.484 -33.622,15.919c3.36,-3.617 5.909,-8.025 6.45,-12.769c-32.726,20.907 -51.843,63.057 -67.314,103.944c-12.148,-11.773 -22.915,-21.044 -32.574,-26.192c-27.097,-14.531 -59.496,-29.692 -110.355,-48.572c-1.561,16.827 8.322,39.201 36.8,54.08c-6.17,-0.826 -17.453,1.017 -26.477,3.178c3.675,19.277 15.677,35.159 48.169,42.839c-14.849,0.98 -22.523,4.359 -29.478,11.642c6.763,13.407 23.266,29.186 52.953,25.947c-33.006,14.226 -13.458,40.571 13.399,36.642c-45.816,47.323 -118.05,43.845 -159.529,4.264c108.299,147.572 343.716,87.274 378.799,-54.866c26.285,0.224 41.737,-9.105 51.318,-19.39c-15.144,2.57 -37.094,-0.086 -48.733,-4.933Z\"\n      class=\"jsx-924075221\"\n    />\n  </svg>\n);\n\nconst githubSvg = (\n  <svg viewBox=\"0 0 1024 1024\" class=\"jsx-924075221\">\n    <path\n      d=\"M512 0C229.25 0 0 229.25 0 512c0 226.25 146.688 418.125 350.156 485.812 25.594 4.688 34.938-11.125 34.938-24.625 0-12.188-0.469-52.562-0.719-95.312C242 908.812 211.906 817.5 211.906 817.5c-23.312-59.125-56.844-74.875-56.844-74.875-46.531-31.75 3.53-31.125 3.53-31.125 51.406 3.562 78.47 52.75 78.47 52.75 45.688 78.25 119.875 55.625 149 42.5 4.654-33 17.904-55.625 32.5-68.375C304.906 725.438 185.344 681.5 185.344 485.312c0-55.938 19.969-101.562 52.656-137.406-5.219-13-22.844-65.094 5.062-135.562 0 0 42.938-13.75 140.812 52.5 40.812-11.406 84.594-17.031 128.125-17.219 43.5 0.188 87.312 5.875 128.188 17.281 97.688-66.312 140.688-52.5 140.688-52.5 28 70.531 10.375 122.562 5.125 135.5 32.812 35.844 52.625 81.469 52.625 137.406 0 196.688-119.75 240-233.812 252.688 18.438 15.875 34.75 47 34.75 94.75 0 68.438-0.688 123.625-0.688 140.5 0 13.625 9.312 29.562 35.25 24.562C877.438 930 1024 738.125 1024 512 1024 229.25 794.75 0 512 0z\"\n      class=\"jsx-924075221\"\n    />\n  </svg>\n);\n\nconst xingSvg = (\n  <svg viewBox=\"0 0 2048 2048\" class=\"jsx-924075221\">\n    <path\n      d=\"M917 795q-10 18-257 456-27 46-65 46h-239q-21 0-31-17t0-36l253-448q1 0 0-1l-161-279q-12-22-1-37 9-15 32-15h239q40 0 66 45zm806-642q11 16 0 37l-528 934v1l336 615q11 20 1 37-10 15-32 15h-239q-42 0-66-45l-339-622q18-32 531-942 25-45 64-45h241q22 0 31 15z\"\n      class=\"jsx-924075221\"\n    />\n  </svg>\n);\n\nconst linkedinSvg = (\n  <svg viewBox=\"0 0 54 54\" class=\"jsx-924075221\">\n    <path\n      d=\"M48.1,12.9v26.8c0,2.2-0.8,4.1-2.4,5.7c-1.6,1.6-3.5,2.4-5.7,2.4H13.3c-2.2,0-4.1-0.8-5.7-2.4c-1.6-1.6-2.4-3.5-2.4-5.7   V12.9c0-2.2,0.8-4.1,2.4-5.7c1.6-1.6,3.5-2.4,5.7-2.4H40c2.2,0,4.1,0.8,5.7,2.4C47.3,8.8,48.1,10.7,48.1,12.9z M18.7,15.4   c0-1-0.4-1.8-1-2.4C17,12.3,16.2,12,15.1,12c-1.1,0-2,0.3-2.6,0.9c-0.7,0.6-1,1.4-1,2.4c0,0.9,0.3,1.7,1,2.4c0.7,0.6,1.5,1,2.6,1h0   c1.1,0,2-0.3,2.7-1C18.4,17.1,18.7,16.3,18.7,15.4z M11.8,40.7h6.4V21.3h-6.4V40.7z M35,40.7h6.4V29.6c0-2.9-0.7-5-2-6.5   c-1.4-1.5-3.2-2.2-5.4-2.2c-2.5,0-4.5,1.1-5.8,3.3h0.1v-2.8h-6.4c0.1,1.2,0.1,7.7,0,19.4h6.4V29.9c0-0.7,0.1-1.2,0.2-1.6   c0.3-0.7,0.7-1.2,1.3-1.7c0.6-0.5,1.2-0.7,2.1-0.7c2.2,0,3.2,1.5,3.2,4.4V40.7z\"\n      class=\"jsx-924075221\"\n    />\n  </svg>\n);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <a\n          href=\"https://github.com/editorconfig-checker\"\n          target=\"_blank\"\n          rel=\"noopener\">\n          <img className=\"logo\" src={logo} alt=\"logo\" />\n        </a>\n      </header>\n      <main className=\"Main\">\n        <h1>Editorconfig-Checker</h1>\n        <h2>What is this about?</h2>\n        <p>\n          An editorconfig is a defintion how your files should be formatted.\n          Compared to other linting tools this tool is language agnostic and\n          works for every language and every major editor out there has a plugin\n          to read the editorconfig. However, there are no good linting tools out\n          there, so I decided to write my own and this is the result. If you\n          want to know more about editorconfig have a look here:{' '}\n          <Link\n            url=\"https://editorconfig.org/\"\n            text=\"https://editorconfig.org\"\n          />\n        </p>\n\n        <h2>For whom is this useful?</h2>\n        <p>\n          This is especially useful if you have more than one filetype in your\n          codebase. Often there are linting tools for every language, but\n          nothing that compares every file with a certain defintion. You may\n          also have files which don't have a linting tool like configuration\n          files, plain text files with no associated programming language, bash\n          scripts, xml, or something else. In order to maintain a certain\n          formatting and enforce this via linting this is for you.\n        </p>\n\n        <h2>How to use this?</h2>\n\n        <h3>Plain</h3>\n        <small>\n          <Link\n            url=\"https://github.com/editorconfig-checker/editorconfig-checker/releases\"\n            text=\"releases\"\n          />\n        </small>\n        <p>\n          Head over to the{' '}\n          <Link\n            url=\"https://github.com/editorconfig-checker/editorconfig-checker/releases\"\n            text=\"release page\"\n          />\n          , grab the binary which fits your operating system and architecture,\n          extract it and simply run the binary found in the <code>bin</code>{' '}\n          directory.\n        </p>\n\n        <h3>JavaScript</h3>\n        <small>\n          <Link\n            url=\"https://www.npmjs.com/package/editorconfig-checker\"\n            text=\"npm\"\n          />{' '}\n          |\n          <Link\n            url=\"https://github.com/editorconfig-checker/editorconfig-checker.javascript\"\n            text=\"github\"\n          />\n        </small>\n        <code>npm install --save-dev editorconfig-checker</code>\n        <p>\n          This provides two binaries called <code>ec</code> and{' '}\n          <code>editorconfig-checker</code> which you can call via{' '}\n          <code>./node_modules/.bin/ec</code>,{' '}\n          <code>./node_modules/.bin/editorconfig-checker</code> or inside your{' '}\n          <code>package.json</code> via <code>ec</code> or{' '}\n          <code>editorconfig-checker</code>.\n        </p>\n\n        <h3>PHP</h3>\n        <small>\n          <Link\n            url=\"https://github.com/editorconfig-checker/editorconfig-checker.php\"\n            text=\"packagist\"\n          />{' '}\n          |\n          <Link\n            url=\"https://github.com/editorconfig-checker/editorconfig-checker.php\"\n            text=\"github\"\n          />\n        </small>\n        <code>composer require --dev editorconfig-checker</code>\n        <p>\n          This provides two binaries called <code>ec</code> and{' '}\n          <code>editorconfig-checker</code> which you can call via{' '}\n          <code>./vendor/bin/ec</code>,{' '}\n          <code>./vendor/bin/editorconfig-checker</code> or inside your{' '}\n          <code>composer.json</code> via <code>ec</code> or{' '}\n          <code>editorconfig-checker</code>.\n        </p>\n\n        <h3>Docker</h3>\n        <code>\n          docker run --rm --volume=$PWD:/check mstruebing/editorconfig-checker\n        </code>\n\n        <h3>Arch Linux</h3>\n        <small>\n          <Link\n            url=\"https://aur.archlinux.org/packages/editorconfig-checker-git/\"\n            text=\"AUR\"\n          />\n        </small>\n        <p>\n          Just use your favourite AUR-helper to install the package{' '}\n          <code>editorconfig-checker-git</code>\n        </p>\n        <code>trizen -S editorconfig-checker-git</code>\n\n        <p>Or build it yourself</p>\n        <code>\n          git clone https://aur.archlinux.org/editorconfig-checker-git.git && cd\n          editorconfig-checker-git && makepkg -si\n        </code>\n\n        <h2>Configuration</h2>\n        <p>\n          There are a bunch of command line flags you can use, but there is also\n          a configuration file which you can use in your current working\n          directory called <code>.ecrc</code>. If you want to use a different\n          config you can pass the <code>-config &lt;path&gt;</code>-flag to the\n          binary. You can generate a configuration with the <code>init</code>\n          -flag. A sample configuration file can look like this:\n        </p>\n        <pre>\n          {`{\n  \"Verbose\": false,\n  \"Debug\": false,\n  \"IgnoreDefaults\": false,\n  \"SpacesAftertabs\": false,\n  \"NoColor\": false,\n  \"Exclude\": [],\n  \"AllowedContentTypes\": [],\n  \"PassedFiles\": [],\n  \"Disable\": {\n    \"EndOfLine\": false,\n    \"Indentation\": false,\n    \"InsertFinalNewline\": false,\n    \"TrimTrailingWhitespace\": false\n  }\n}`}\n        </pre>\n\n        <h2>Support</h2>\n\n        <h3> Github Issues</h3>\n        <p>\n          In order to get help with problems, feature requests or anything else\n          you can use Github issues. Please try to use the correct repository,\n          the main repository where most development is done is this one:{' '}\n          <Link\n            url=\"https://github.com/editorconfig-checker/editorconfig-checker\"\n            text=\"editorconfig-cheker/editorconfig-checker\"\n          />\n          . If you have issues for a specific language client, which are in fact\n          only wrappers of the main binary, you can of course open an issue\n          there - and don't worry, if you use the wrong repository it is not a\n          big problem. :)\n        </p>\n\n        <h3>IRC</h3>\n        <p>\n          Believe it or not, I'm still an active user of IRC. If you want you\n          can reach me there on freenode in <code>#editorconfig-checker</code>.\n          If you don't have an IRC-client set up you can use this web-client{' '}\n          <Link\n            url=\"https://webchat.freenode.net/?channels=editorconfig-checker\"\n            text=\"freenode webchat\"\n          />\n          .\n        </p>\n      </main>\n      <footer>\n        <ul>\n          <li>\n            <Link url=\"https://twitter.com/mxstrbng\" text={twitterSvg} />\n          </li>\n          <li>\n            <Link url=\"https://github.com/mstruebing\" text={githubSvg} />\n          </li>\n          <li>\n            <Link\n              url=\"https://www.xing.com/profile/Max_Struebing2?sc_o=mxb_p\"\n              text={xingSvg}\n            />\n          </li>\n          <li>\n            <Link\n              url=\"https://www.linkedin.com/in/max-str%C3%BCbing-131165131/\"\n              text={linkedinSvg}\n            />\n          </li>\n        </ul>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}